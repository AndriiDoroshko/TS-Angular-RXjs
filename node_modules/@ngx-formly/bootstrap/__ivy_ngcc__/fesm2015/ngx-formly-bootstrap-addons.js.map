{"version":3,"file":"ngx-formly-bootstrap-addons.js","sources":["@ngx-formly/bootstrap/addons/addons.component.ts","@ngx-formly/bootstrap/addons/addon.extension.ts","@ngx-formly/bootstrap/addons/addons.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-addons',\n  templateUrl: './addons.component.html',\n  styleUrls: ['./addons.component.scss'],\n})\nexport class FormlyWrapperAddons extends FieldWrapper {\n  addonRightClick($event: any) {\n    if (this.to.addonRight.onClick) {\n      this.to.addonRight.onClick(this.to, this, $event);\n    }\n  }\n\n  addonLeftClick($event: any) {\n    if (this.to.addonLeft.onClick) {\n      this.to.addonLeft.onClick(this.to, this, $event);\n    }\n  }\n}\n","import { FormlyFieldConfig } from '@ngx-formly/core';\n\nexport function addonsExtension(field: FormlyFieldConfig) {\n  if (!field.templateOptions || (field.wrappers && field.wrappers.indexOf('addons') !== -1)) {\n    return;\n  }\n\n  if (field.templateOptions.addonLeft || field.templateOptions.addonRight) {\n    field.wrappers = [...(field.wrappers || []), 'addons'];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormlyWrapperAddons } from './addons.component';\nimport { addonsExtension } from './addon.extension';\n\n@NgModule({\n  declarations: [FormlyWrapperAddons],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    FormlyModule.forChild({\n      wrappers: [\n        { name: 'addons', component: FormlyWrapperAddons },\n      ],\n      extensions: [\n        { name: 'addons', extension: { postPopulate: addonsExtension } },\n      ],\n    }),\n  ],\n})\nexport class FormlyBootstrapAddonsModule { }\n"]}