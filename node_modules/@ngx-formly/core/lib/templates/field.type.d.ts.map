{"version":3,"file":"field.type.d.ts","sources":["field.type.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { FormControl, FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\nexport interface FieldTypeConfig extends FormlyFieldConfig {\n    formControl: NonNullable<FormControl>;\n    templateOptions: NonNullable<FormlyFieldConfig['templateOptions']>;\n    options: NonNullable<FormlyFieldConfig['options']>;\n}\nexport interface FieldGroupTypeConfig extends FormlyFieldConfig {\n    formControl: NonNullable<FormGroup>;\n    templateOptions: NonNullable<FormlyFieldConfig['templateOptions']>;\n    options: NonNullable<FormlyFieldConfig['options']>;\n}\nexport declare abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> {\n    field: F;\n    defaultOptions?: Partial<F>;\n    model: any;\n    form: FormGroup;\n    options: F['options'];\n    readonly key: string | number | string[];\n    readonly formControl: NonNullable<F[\"formControl\"]>;\n    readonly to: import(\"../components/formly.field.config\").FormlyTemplateOptions;\n    readonly showError: boolean;\n    readonly id: string;\n    readonly formState: any;\n}\n/**\n * @deprecated use `FieldType` instead\n */\nexport declare abstract class Field extends FieldType {\n    constructor();\n}\n"]}